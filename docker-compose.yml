version: "3.7"

services:
  account_app:
    build: ./account
    entrypoint: ./.docker/entrypoint.sh
    container_name: node-account-app
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - ${APP_ACCOUNT_PORT}:${APP_ACCOUNT_PORT}
    volumes:
      - ./account:/home/node/account
    depends_on:
      mongo_db:
        condition: service_started
    networks: 
      - bitcoin-net

  mongo_db:
    container_name: mongo-db
    #    image: mongo:4.2
    #    environment:
    #      - MONGO_INITDB_ROOT_USERNAME=${DB_MONGO_USER}
    #      - MONGO_INITDB_DATABASE=${DB_MONGO_NAME}
    #      - MONGO_INITDB_ROOT_PASSWORD=${DB_MONGO_PASS}
    image: 'bitnami/mongodb:latest'
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongo_db
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_USER=${DB_MONGO_USER}
      - MONGODB_ROOT_PASSWORD=${DB_MONGO_PASS}
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    networks: 
      - bitcoin-net
    ports:
      - '${DB_MONGO_PORT}:${DB_MONGO_PORT}'
    volumes:
      - ./data:/data/mongo_db
  
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    depends_on:
      - mongo_db
    networks: 
      - bitcoin-net
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-db
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_MONGO_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_MONGO_PASS}
      - ME_CONFIG_BASICAUTH_USERNAME=${DB_MONGO_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${DB_MONGO_PASS}
    ports:
      - '${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}'
    volumes: 
      - ./data:/data/mongo_db

  kong-database:
    image: postgres:9.6
    container_name: kong-database
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    volumes:
      - "db-data-kong-postgres:/var/lib/postgresql/data"
    networks: 
      - bitcoin-net

  kong-migrations:
    image: kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
    command: kong migrations bootstrap
    restart: on-failure
    depends_on:
      - kong-database
    networks: 
      - bitcoin-net

  kong:
    image: kong
    container_name: kong
    environment:
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: on-failure
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    links:
      - kong-database:kong-database
    depends_on:
      - kong-migrations
    networks: 
      - bitcoin-net

  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    links:
      - kong:kong
    container_name: konga
    environment:
      - NODE_ENV=production
    networks: 
      - bitcoin-net

  kong-configurator:
    build: .
    depends_on:
      - kong
    command: /bin/sh -c "setup-kong.sh"
    networks: 
      - bitcoin-net

volumes:
  db-data-kong-postgres:
  
networks:
  bitcoin-net:
    driver: bridge